# -*- coding: utf-8 -*-
"""LogisticAndKNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u0AFcoxtiFBKwS20v7JOS15R3CrKwBxW
"""

import pandas as pd  
import numpy as np  
from sklearn.linear_model import LogisticRegression as Lori
from sklearn.neighbors import KNeighborsClassifier as Knn
from sklearn.model_selection import StratifiedKFold
from sklearn.model_selection import train_test_split
from sklearn import metrics

#Prepare Data
ir = pd.read_csv('https://raw.githubusercontent.com/mxnec1818/ML_irs_data/main/iris.csv',usecols=[0,1,2,3,4,5])
X = ir.drop(columns=['target','variety'])[:150]
z = ir['variety'][:150]


model = [Lori(max_iter=1000,solver='lbfgs'),Knn()]
withi = [u'Logistic Regression',u'KNeighbors Classifier']

#K-fold 
Score = [[],[]]
splits = 10
for f,t in StratifiedKFold(n_splits=splits).split(X,z):
    for i,m in enumerate(model):
        Score[i].append(m.fit(X.iloc[f],z.iloc[f]).score(X.iloc[t],z.iloc[t])*100)
Score_Mean = np.mean(Score,1)

print('')
print('ทดสอบ Accuracy ของเทคนิค k-fold , Segment = ' + str(splits))
for i in range(2):
    print('%s: %.1f%%'%(withi[i],Score_Mean[i]))

print('')


#Prepare Data
test_size = 0.1
x_train,x_test,y_train,y_test = train_test_split(X,z,test_size = test_size)

#Prepare Model
LoriModel = Lori(max_iter=1000,solver='lbfgs')
KnnModel = Knn()

#Train Model
LoriModel.fit(x_train,y_train)
KnnModel.fit(x_train,y_train)

#Evaluation
print('ทดสอบ Precosom และ Recall ของเทคนิค Evaluation metrics')
y_pre = LoriModel.predict(x_test)
print("Precision Score : ",metrics.precision_score(y_test,y_pre,average='micro')*100,'%')
print("Recall Score : ",metrics.recall_score(y_test,y_pre,average='micro')*100,'%')

#Input feature
while True:
  print('Sepal length :')
  Sepal_length = float(input())
  print('Sepal width :')
  Sepal_width = float(input())
  print('Petal length :')
  Petal_length = float(input())
  print('Petal width :')
  Petal_width = float(input())
  x_test2 = [[Sepal_length,Sepal_width,Petal_length,Petal_width]]
  LoriPredict = LoriModel.predict(x_test2)
  KnnPredict = KnnModel.predict(x_test2)
  print('The results of the predictions (Logistic Regression) : ' + LoriPredict)
  print('The results of the predictions (K-Nearest Neighbors (KNN)) : ' + KnnPredict)
  print()